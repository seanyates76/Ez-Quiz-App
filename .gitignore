#
# Welcome to EZ‑Quiz — maintainer notes for future yous
# -----------------------------------------------------
# This repo is a static PWA served from /public with a few Netlify Functions
# under /netlify/functions. Frontend is vanilla ES modules.
#
# Quick orientation
# - Entry HTML/CSS/JS live in public/ (index.html, styles.css, js/*).
# - Service worker: public/sw.js. We hard‑bump CACHE_NAME and also version
#   asset URLs in index.html (e.g., ?v=1.2.x) to force client refreshes.
# - Functions: Netlify handlers (generate-quiz, send-feedback, health).
# - State: window.EZQ is the single source of truth; window.__EZQ__ proxies it.
# - Retake results: results render against originalQuestions using indexMap and
#   originalAnswers so full results persist across retakes.
# - Privacy: CSP is first‑party only; cookie is SameSite=Lax (+Secure on HTTPS).
# - Mobile polish: FAB/footer spacing uses CSS token --fab-offset-mobile.
#
# Common tasks (no surprises)
# - Bumping caches: update index.html ?v=..., and sw.js CACHE_NAME + precache list.
# - Adding UI handlers: prefer bindOnce(el, type, handler) from utils.js.
# - Mirror visibility: use setMirrorVisible() in generator.js.
# - Retake wiring: use RETAKE_MISSED/RETAKE_ALL constants; compute scope at click time.
#
# Guardrails
# - Don’t introduce third‑party scripts without updating CSP (netlify.toml).
# - Avoid innerHTML for user content; render via text/DOM nodes.
# - Keep results logic state‑first (don’t infer from DOM).
# - When you ship user‑visible changes, update the Help modal content in
#   public/index.html (What’s New, FAQ, Parser Reference) in the same PR so
#   instructions/screenshots stay accurate. Footer version should match
#   CHANGELOG.md and link to it.
#
# Happy hacking — and thanks for keeping it tidy.

# General
.DS_Store
Thumbs.db
*.log
.env*
.idea/
.vscode/
node_modules/
dist/
build/

# Local tools and design sources
tools/
icons/source.png
# Keep the runtime header source in repo
!icons/brand-title-source.png
